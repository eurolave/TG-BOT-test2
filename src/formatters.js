import { escapeHtml, detectLangFromLocale, brandEmoji } from './utils.js';

/**
 * HTML-–∫–∞—Ä—Ç–æ—á–∫–∞ VIN (–ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è ru/en, —ç–º–æ–¥–∑–∏ –±—Ä–µ–Ω–¥–æ–≤)
 * –û–∂–∏–¥–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç:
 * { ok: true, data: [ { vehicles: [ { brand, name, attributes:{...}, catalog, ssd } ] } ], vin, locale }
 */
export function formatVinCardHtml(json) {
  const root = json?.data ?? json;
  const vin  = json?.vin || '';
  const locale = json?.locale || 'ru_RU';
  const lang = detectLangFromLocale(locale);

  const vehicles = Array.isArray(root) ? root[0]?.vehicles : root?.vehicles;
  const v = Array.isArray(vehicles) ? vehicles[0] : null;

  const A = v?.attributes || {};
  const getV = (k) => A?.[k]?.value ?? '';
  const getN = (k, fallback) => A?.[k]?.name ?? fallback ?? k;

  const brand = v?.brand || '';
  const model = v?.name  || '';
  const emoji = brandEmoji(brand);

  const labels = {
    ru: {
      date: '–î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞',
      manufactured: '–í—ã–ø—É—â–µ–Ω–æ',
      prodrange: '–ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
      engine: '–î–≤–∏–≥–∞—Ç–µ–ª—å',
      engine_info: '–î–≤–∏–≥–∞—Ç–µ–ª—å',
      transmission: '–ö–ü–ü',
      framecolor: '–¶–≤–µ—Ç –∫—É–∑–æ–≤–∞',
      trimcolor: '–¶–≤–µ—Ç —Å–∞–ª–æ–Ω–∞'
    },
    en: {
      date: 'Production date',
      manufactured: 'Manufactured',
      prodrange: 'Production range',
      engine: 'Engine',
      engine_info: 'Engine',
      transmission: 'Transmission',
      framecolor: 'Body color',
      trimcolor: 'Interior color'
    }
  }[lang];

  const items = [
    ['üìÖ', labels.date,         getV('date')],
    ['üè≠', labels.manufactured, getV('manufactured')],
    ['‚è≥', labels.prodrange,    getV('prodrange')],
    ['‚öôÔ∏è', labels.engine,       getV('engine')],
    ['üöó', labels.engine_info,  getV('engine_info')],
    ['üîß', labels.transmission, getV('transmission')],
    ['üé®', labels.framecolor,   getV('framecolor')],
    ['ü™ë', labels.trimcolor,    getV('trimcolor')]
  ].filter(([, , val]) => !!val);

  const title =
    `${emoji} <b>${escapeHtml(brand || '')} ${escapeHtml(model || '')}</b>`;

  const metaLabel = lang === 'ru' ? '–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä' : 'Identifier';
  const localeLabel = lang === 'ru' ? '—è–∑—ã–∫' : 'locale';

  const subtitle =
    `VIN: <b>${escapeHtml(vin)}</b> &nbsp;‚Ä¢&nbsp; ${escapeHtml(localeLabel)}: <b>${escapeHtml(locale)}</b>`;

  const lines = items.map(([e, name, val]) =>
    `${e} <b>${escapeHtml(name)}:</b> ${escapeHtml(String(val))}`);

  // —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –º–æ–≥–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –±—É–¥—É—â–µ–º
  const tech = {
    catalog: v?.catalog || '',
    ssd: v?.ssd || ''
  };

  return {
    html: [title, subtitle, '', ...lines].join('\n'),
    tech
  };
}
